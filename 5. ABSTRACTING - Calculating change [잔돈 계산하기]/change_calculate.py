def calculate_change(payment, cost):
    change = payment - cost
    
    thousand_50 = change // 50000
    print(f'50000원 지폐: {thousand_50}장')
    thousand_10 = (change % 50000) // 10000
    print(f'10000원 지폐: {thousand_10}장')
    thousand_5 = (change % 10000) // 5000
    print(f'5000원 지폐: {thousand_5}장')
    thousand_1 = (change % 5000) // 1000
    print(f'1000원 지폐: {thousand_1}장')

calculate_change(100000, 33000)
print()
calculate_change(500000, 378000)

#3차 시도 - '//(버림 나눗셈)' 및 '%(나머지)' 연산자 활용과 더불어 작은 단위 잔돈 계산식 단순화
'''
 버림 나눗셈 연산의 결과는 보통 한 자리수로 나온다.
ex_ 잔돈이 83,000원일 경우 50,000원으로 계산하면 : 83,000 // 50,000 = 1

나는 여기에 집착하여 나머지 연산의 결과도 한 자리수가 나올 것이라고 계속 착각하고 있었다.
실제로는 83,000 % 50,000 = 33,000원으로 계산된 후의 잔액이 나오게 된다.
이 부분을 놓쳐서 복잡한 계산식을 사용하게 됐다.

 결과적으로 최종 압축된 수식은 '(잔돈 % a단위 금액) // a-1단위 금액'이 된다.
ex_ 잔돈이 83,000원
1,000원 지폐 수를 계산하려면 : 83,000 % 5,000 = 3,000
                                3,000 // 1,000 = 3
                                따라서 1,000원권은 3장이 된다.

//와 %은 잘 사용하지 않는 연산자이다 보니 이해했다고 생각하면서도 바로 떠올리고 적용하기 어려웠다,
이런 식에 익숙해질 수 있도록 연습해야겠다. '''
